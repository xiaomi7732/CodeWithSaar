<Window x:Class="CodeNameK.WPF.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:CodeNameK.WPF" 
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF" xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" TextElement.Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignPaper}" TextElement.FontWeight="Normal" TextElement.FontSize="14" mc:Ignorable="d" Title="CodeNameK" Height="800" Width="1024">
    <Window.Resources>
        <DataTemplate x:Key="categoryItemTemplate">
            <TextBlock Text="{Binding Id}" ToolTip="{Binding Id}" />
        </DataTemplate>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Application">
                <MenuItem Header="_Sync" Command="{Binding SyncCommand}" />
                <MenuItem Header="_Cancel Sign In" Command="{Binding CancelSignInCommand}" />
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
        </Menu>
        <!--Status bar-->
        <StatusBar DockPanel.Dock="Bottom" Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBarItem>
                <TextBlock Text="Data Folder: " />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding DataFolderPath}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Sync Status:" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding SyncStateText}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Sign in state:" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding SignInStatus}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Background Sync:" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding UpSyncStateText}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="U:" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding UpSyncQueueLength}" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="D:" />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding DownSyncQueueLength}" />
            </StatusBarItem>
        </StatusBar>
        <!--Sync progress-->
        <Grid DockPanel.Dock="Bottom" Margin="0 0 0 0">
            <ProgressBar Grid.Column="0" Maximum="1" Minimum="0" SmallChange="0.01" LargeChange="0.1" Value="{Binding SyncProgress}" VerticalAlignment="Center" />
        </Grid>
        <!--Main Area-->
        <Grid Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="200" Width="*" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>
            <materialDesign:Card Margin="0 0 8 0" Padding="8 8 0 0">
                <Grid>
                    <Grid.RowDefinitions>
                        <!--Header-->
                        <RowDefinition Height="Auto"></RowDefinition>
                        <!--TextBox-->
                        <RowDefinition Height="Auto"></RowDefinition>
                        <!--ListView-->
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock Text="{Binding CategoryHeader}" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                               Margin="8"/>
                    </StackPanel>
                    <Grid Grid.Row="1" Margin="8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding CategoryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding AddCategoryCommand}" Key="Return"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Grid.Column="1" Width="48" Margin="4 0 0 0" Command="{Binding AddCategoryCommand}" VerticalAlignment="Center" Height="24">+</Button>
                    </Grid>
                    <ListView Grid.Row="2" ItemsSource="{Binding CategoryCollectionView, Mode=OneWay}" 
                              ItemTemplate="{StaticResource ResourceKey=categoryItemTemplate}" 
                              SelectedItem="{Binding SelectedCategory, Mode=TwoWay}"
                              Cursor="Hand"
                              />
                </Grid>
            </materialDesign:Card>
            <GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Stretch" Margin="0 20 0 20" />
            <!-- Chart container -->
            <Grid Grid.Column="2" Margin="32,32,32,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <!-- Selected dataPoint -->
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--Buttons on the right upper corner-->
                <Grid HorizontalAlignment="Right" Height="50" Visibility="{Binding SelectedCategory, Converter={StaticResource NullableToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Date Range:" VerticalAlignment="Center" Margin="0 0 4 0" />
                    <ComboBox Grid.Column="1" Grid.Row="0" Margin="0 0 8 0" ItemsSource="{Binding DateRangeOptions}" VerticalAlignment="Center" SelectedValue="{Binding SelectedDateRangeOption}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DisplayName}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="2" ToolTip="Use mouse scroller to zoom in. Click here to reset zoom." Command="{Binding ResetZoomCommand}">_Reset Zoom</Button>
                    <TextBlock Grid.Column="3" Margin="0 0 8 0" VerticalAlignment="Center">
                        <Bold>> Tips</Bold>
                        <TextBlock.ToolTip>
                            <StackPanel Orientation="Vertical">
                                <TextBlock>
                                    <Bold>Mouse wheel</Bold>
                                    to zoom in/out.
                                </TextBlock>
                                <TextBlock>
                                    <Bold>Click down + move</Bold>
                                    to move the chart.
                                </TextBlock>
                                <TextBlock>
                                    <Bold>Ctrl+Click</Bold>
                                    to pick a point.
                                </TextBlock>
                                <TextBlock>
                                    <Bold>Right click</Bold>
                                    for context menu.
                                </TextBlock>
                            </StackPanel>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </Grid>
                <lvc:CartesianChart Grid.Row="1" Margin="0 0 0 16" Series="{Binding Series}" XAxes="{Binding XAxes}" YAxes="{Binding YAxes}" ZoomMode="X">
                    <lvc:CartesianChart.InputBindings>
                        <MouseBinding Command="{Binding PickPointCommand}" Gesture="Control+LeftClick" />
                        <MouseBinding Command="{Binding PickPointCommand}" Gesture="RightClick" />
                    </lvc:CartesianChart.InputBindings>
                    <lvc:CartesianChart.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Select" Command="{Binding PickPointCommand}"></MenuItem>
                            <MenuItem Header="Delete" Command="{Binding SelectedDataPoint.DeletePointCommand}" CommandParameter="{Binding}" IsEnabled="{Binding SelectedDataPoint, TargetNullValue=False}"></MenuItem>
                            <MenuItem Header="Reset Zoom" Command="{Binding ResetZoomCommand}" />
                        </ContextMenu>
                    </lvc:CartesianChart.ContextMenu>
                </lvc:CartesianChart>
                <materialDesign:Card  Grid.Row="2" Padding="16">
                    <StackPanel>
                        <TextBlock Text="Manage Data Point" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Margin="0 0 0 4" />
                        <TextBlock Text="Add a new data point or pick a data point by Ctrl+Click to replicate." Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Margin="0 4 0 16" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <RadioButton GroupName="DateMode" Grid.ColumnSpan="3" 
                                     VerticalAlignment="Center" IsChecked="{Binding SelectedDataPoint.IsCurrentDateTimeMode, Mode=TwoWay}"
                                         >Use Current Datetime</RadioButton>
                            <!--Date Time-->
                            <RadioButton IsChecked="{Binding SelectedDataPoint.IsCurrentDateTimeMode, Converter={StaticResource InverseBooleanConverter}}" GroupName="DateMode" Grid.Row="1" VerticalAlignment="Center">
                                Specify:
                            </RadioButton>
                            <DatePicker Grid.Row="1" HorizontalAlignment="Left" Grid.Column="1" VerticalAlignment="Center" SelectedDateFormat="Long" SelectedDate="{Binding SelectedDataPoint.LocalDate, Mode=TwoWay}" IsEnabled="{Binding SelectedDataPoint.IsCurrentDateTimeMode, Converter={StaticResource InverseBooleanConverter}}"/>
                            <materialDesign:TimePicker 
                                Grid.Row="1"
                                Grid.Column="2" 
                                Text="{Binding SelectedDataPoint.TimeSpan, Mode=TwoWay}"
                                IsEnabled="{Binding SelectedDataPoint.IsCurrentDateTimeMode, Converter={StaticResource InverseBooleanConverter}}" 
                                HorizontalAlignment="Left"
                                SelectedTimeFormat="Long"
                                WithSeconds="True"
                                Is24Hours="True" />


                            <!--Value-->
                            <TextBlock Text="Value:" Grid.Row="2" VerticalAlignment="Center" />
                            <TextBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Grid.ColumnSpan="2" Text="{Binding SelectedDataPoint.Value, Mode=TwoWay}" />
                            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="3">
                                <Button Command="{Binding SelectedDataPoint.AddPointCommand}" CommandParameter="{Binding}">_Add</Button>
                                <Button Command="{Binding SelectedDataPoint.DeletePointCommand}" CommandParameter="{Binding}" ToolTip="Use Ctrl + Click to pick a data point for deletion">_Delete</Button>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </materialDesign:Card>
            </Grid>
        </Grid>
    </DockPanel>
</Window>