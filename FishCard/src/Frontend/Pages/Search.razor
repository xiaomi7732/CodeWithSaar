@page "/search"
@using System.Linq;
@inject QueryFishService _queryFishService;
@inject RecommendService _recommendationService;

<h3>Search</h3>

<datalist id="fishNames">
    @if (_allFishNames is not null)
    {
        foreach (var name in _allFishNames)
        {
            <option value="@name" />
        }
    }
</datalist>

<div>
    <input @bind-value="Keyword" placeholder="Search for a fish by name" autocomplete="no" list="fishNames" />
    <button @onclick="QueryFishAsync">Search</button>
</div>

<div>
    @foreach (FishItem fish in _fishResult)
    {
        <div>Name: @fish.Name</div>
        <div>Recommendation: @GetRecommendation(fish)</div>
        <hr />
    }
</div>

@code {
    private string[]? _allFishNames;

    private string? _keyword;
    private string? Keyword
    {
        get
        {
            return _keyword;
        }
        set
        {
            if (!string.Equals(_keyword, value, StringComparison.Ordinal))
            {
                _keyword = value;
                _ = QueryFishAsync();
            }
        }
    }

    private IEnumerable<FishItem> _fishResult = Enumerable.Empty<FishItem>();

    protected override async Task OnInitializedAsync()
    {
        _allFishNames = (await _queryFishService.GetAllFishesAsync()).Select(item => item.Name).ToArray();
    }

    public async Task QueryFishAsync()
    {
        _fishResult = await _queryFishService.GetFishesByAsync(_keyword);
    }

    public string GetRecommendation(FishItem fish)
    {
        return _recommendationService.GetRecommendation(fish);
    }
}
